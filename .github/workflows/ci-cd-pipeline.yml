name: CI/CD Pipeline

on:
  push:
    branches: [ master ]  # Ajuste para "main" se necessário
  pull_request:
    branches: [ master ]  # Ajuste para "main" se necessário

jobs:
  build:
    runs-on: self-hosted  # Especificando que o job rodará no runner self-hosted (local)

    steps:
      # Checkout do código fonte
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login no Docker Hub usando arquivo de configuração com ajuste para PowerShell
      - name: Login to Docker Hub (Windows)
        run: |
          $username = "${{ secrets.DOCKER_USERNAME }}"
          $password = "${{ secrets.DOCKER_PASSWORD }}"
          $base64Auth = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes("${username}:${password}"))
          $json = "{`"auths`": {`"https://index.docker.io/v1/`": {`"auth`": `"$base64Auth`" } } }"
          Set-Content -Path "$HOME/.docker/config.json" -Value $json

      # Build da imagem Docker com nome correto
      - name: Build Docker Image
        run: docker build -t $env:DOCKER_USERNAME/node-hello-world:${{ github.sha }} .

      # Push da imagem para o Docker Registry
      - name: Push Docker Image
        run: docker push $env:DOCKER_USERNAME/node-hello-world:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      # Checkout do código fonte
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar o `kubectl` no Windows usando o secret `KUBECONFIG`
      - name: Setup kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > C:/Temp/kubeconfig
          $env:KUBECONFIG = "C:/Temp/kubeconfig"

      # Deploy da nova imagem no Kubernetes
      - name: Deploy to Kubernetes
        run: kubectl set image deployment/node-hello-world node-hello-world=${{ secrets.DOCKER_USERNAME }}/node-hello-world:${{ github.sha }}
        # teste